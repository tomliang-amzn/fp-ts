"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chainEitherK = chainEitherK;
exports.chainOptionK = chainOptionK;
exports.filterOrElse = filterOrElse;
exports.fromEitherK = fromEitherK;
exports.fromOption = fromOption;
exports.fromOptionK = fromOptionK;
exports.fromPredicate = fromPredicate;

var _function = require("./function");

var _ = _interopRequireWildcard(require("./internal"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * The `FromEither` type class represents those data types which support errors.
 *
 * @since 2.10.0
 */
function fromOption(F) {
  return function (onNone) {
    return function (ma) {
      return F.fromEither(_.isNone(ma) ? _.left(onNone()) : _.right(ma.value));
    };
  };
}
/**
 * @category constructors
 * @since 2.10.0
 */


function fromPredicate(F) {
  return function (predicate, onFalse) {
    return function (a) {
      return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));
    };
  };
} // -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------

/**
 * @category combinators
 * @since 2.10.0
 */


function fromOptionK(F) {
  var fromOptionF = fromOption(F);
  return function (onNone) {
    var from = fromOptionF(onNone);
    return function (f) {
      return (0, _function.flow)(f, from);
    };
  };
}
/**
 * @category combinators
 * @since 2.10.0
 */


function chainOptionK(F, M) {
  var fromOptionKF = fromOptionK(F);
  return function (onNone) {
    var from = fromOptionKF(onNone);
    return function (f) {
      return function (ma) {
        return M.chain(ma, from(f));
      };
    };
  };
}
/**
 * @category combinators
 * @since 2.10.0
 */


function fromEitherK(F) {
  return function (f) {
    return (0, _function.flow)(f, F.fromEither);
  };
}
/**
 * @category combinators
 * @since 2.10.0
 */


function chainEitherK(F, M) {
  var fromEitherKF = fromEitherK(F);
  return function (f) {
    return function (ma) {
      return M.chain(ma, fromEitherKF(f));
    };
  };
}
/**
 * @category combinators
 * @since 2.10.0
 */


function filterOrElse(F, M) {
  return function (predicate, onFalse) {
    return function (ma) {
      return M.chain(ma, function (a) {
        return F.fromEither(predicate(a) ? _.right(a) : _.left(onFalse(a)));
      });
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,