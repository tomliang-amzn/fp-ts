"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chainStateK = chainStateK;
exports.fromStateK = fromStateK;
exports.get = get;
exports.gets = gets;
exports.modify = modify;
exports.put = put;

var _function = require("./function");

var S = _interopRequireWildcard(require("./State"));

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Lift a computation from the `State` monad.
 *
 * @since 2.11.0
 */
var State = S.State; // -------------------------------------------------------------------------------------
// model
// -------------------------------------------------------------------------------------

/**
 * @category type classes
 * @since 2.11.0
 */

function get(F) {
  return function () {
    return F.fromState(S.get());
  };
}
/**
 * @category constructors
 * @since 2.11.0
 */


function put(F) {
  return function (s) {
    return F.fromState(S.put(s));
  };
}
/**
 * @category constructors
 * @since 2.11.0
 */


function modify(F) {
  return (0, _function.flow)(S.modify, F.fromState);
}
/**
 * @category constructors
 * @since 2.11.0
 */


function gets(F) {
  return (0, _function.flow)(S.gets, F.fromState);
} // -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------

/**
 * @category combinators
 * @since 2.11.0
 */


function fromStateK(F) {
  return function (f) {
    return (0, _function.flow)(f, F.fromState);
  };
}
/**
 * @category combinators
 * @since 2.11.0
 */


function chainStateK(F, M) {
  var fromStateKF = fromStateK(F);
  return function (f) {
    return function (ma) {
      return M.chain(ma, fromStateKF(f));
    };
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,