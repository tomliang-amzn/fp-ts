"use strict";

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.alt = alt;
exports.altValidation = altValidation;
exports.ap = ap;
exports.bimap = bimap;
exports.chain = chain;
exports.getEitherM = getEitherM;
exports.getOrElse = getOrElse;
exports.left = left;
exports.leftF = leftF;
exports.map = map;
exports.mapLeft = mapLeft;
exports.match = match;
exports.matchE = matchE;
exports.orElse = orElse;
exports.orElseFirst = orElseFirst;
exports.orLeft = orLeft;
exports.right = right;
exports.rightF = rightF;
exports.swap = swap;
exports.toUnion = toUnion;

var _Apply = require("./Apply");

var E = _interopRequireWildcard(require("./Either"));

var _function = require("./function");

var _Functor = require("./Functor");

function _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== "function") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }

function _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") { return { "default": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj["default"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * @since 2.0.0
 */
var Either = E.Either; // -------------------------------------------------------------------------------------
// constructors
// -------------------------------------------------------------------------------------

/**
 * @since 2.10.0
 */

function right(F) {
  return (0, _function.flow)(E.right, F.of);
}
/**
 * @since 2.10.0
 */


function left(F) {
  return (0, _function.flow)(E.left, F.of);
}
/**
 * @since 2.10.0
 */


function rightF(F) {
  return function (fa) {
    return F.map(fa, E.right);
  };
}
/**
 * @since 2.10.0
 */


function leftF(F) {
  return function (fe) {
    return F.map(fe, E.left);
  };
} // -------------------------------------------------------------------------------------
// type class members
// -------------------------------------------------------------------------------------

/**
 * @since 2.10.0
 */


function map(F) {
  return (0, _Functor.map)(F, E.Functor);
}
/**
 * @since 2.10.0
 */


function ap(F) {
  return (0, _Apply.ap)(F, E.Apply);
}
/**
 * @since 2.10.0
 */


function chain(M) {
  return function (f) {
    return function (ma) {
      return M.chain(ma, function (e) {
        return E.isLeft(e) ? M.of(e) : f(e.right);
      });
    };
  };
}
/**
 * @since 2.10.0
 */


function alt(M) {
  return function (second) {
    return function (first) {
      return M.chain(first, function (e) {
        return E.isLeft(e) ? second() : M.of(e);
      });
    };
  };
}
/**
 * @since 2.10.0
 */


function bimap(F) {
  return function (f, g) {
    return function (fea) {
      return F.map(fea, E.bimap(f, g));
    };
  };
}
/**
 * @since 2.10.0
 */


function mapLeft(F) {
  return function (f) {
    return function (fea) {
      return F.map(fea, E.mapLeft(f));
    };
  };
}
/**
 * @since 2.10.0
 */


function altValidation(M, S) {
  return function (second) {
    return function (first) {
      return M.chain(first, E.match(function (e1) {
        return M.map(second(), E.mapLeft(function (e2) {
          return S.concat(e1, e2);
        }));
      }, right(M)));
    };
  };
} // -------------------------------------------------------------------------------------
// destructors
// -------------------------------------------------------------------------------------

/**
 * @since 2.11.0
 */


function match(F) {
  return function (onLeft, onRight) {
    return function (ma) {
      return F.map(ma, E.match(onLeft, onRight));
    };
  };
}
/**
 * @since 2.10.0
 */


function matchE(M) {
  return function (onLeft, onRight) {
    return function (ma) {
      return M.chain(ma, E.match(onLeft, onRight));
    };
  };
}
/**
 * @since 2.10.0
 */


function getOrElse(M) {
  return function (onLeft) {
    return function (ma) {
      return M.chain(ma, E.match(onLeft, M.of));
    };
  };
} // -------------------------------------------------------------------------------------
// combinators
// -------------------------------------------------------------------------------------

/**
 * @since 2.10.0
 */


function orElse(M) {
  return function (onLeft) {
    return function (ma) {
      return M.chain(ma, function (e) {
        return E.isLeft(e) ? onLeft(e.left) : M.of(e);
      });
    };
  };
}
/**
 * @since 2.11.0
 */


function orElseFirst(M) {
  var orElseM = orElse(M);
  return function (onLeft) {
    return orElseM(function (e) {
      return M.map(onLeft(e), function (eb) {
        return E.isLeft(eb) ? eb : E.left(e);
      });
    });
  };
}
/**
 * @since 2.11.0
 */


function orLeft(M) {
  return function (onLeft) {
    return function (ma) {
      return M.chain(ma, E.match(function (e) {
        return M.map(onLeft(e), E.left);
      }, function (a) {
        return M.of(E.right(a));
      }));
    };
  };
} // -------------------------------------------------------------------------------------
// utils
// -------------------------------------------------------------------------------------

/**
 * @since 2.10.0
 */


function swap(F) {
  return function (ma) {
    return F.map(ma, E.swap);
  };
}
/**
 * @since 2.10.0
 */


function toUnion(F) {
  return function (fa) {
    return F.map(fa, E.toUnion);
  };
} // -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
// tslint:disable: deprecation


var URI = E.URI;
/**
 * @category model
 * @since 2.0.0
 * @deprecated
 */

/** @deprecated  */

/* istanbul ignore next */
function getEitherM(M) {
  var _ap = ap(M);

  var _map = map(M);

  var _chain = chain(M);

  var _alt = alt(M);

  var _bimap = bimap(M);

  var _mapLeft = mapLeft(M);

  var _fold = matchE(M);

  var _getOrElse = getOrElse(M);

  var _orElse = orElse(M);

  return {
    map: function map(fa, f) {
      return (0, _function.pipe)(fa, _map(f));
    },
    ap: function ap(fab, fa) {
      return (0, _function.pipe)(fab, _ap(fa));
    },
    of: right(M),
    chain: function chain(ma, f) {
      return (0, _function.pipe)(ma, _chain(f));
    },
    alt: function alt(fa, that) {
      return (0, _function.pipe)(fa, _alt(that));
    },
    bimap: function bimap(fea, f, g) {
      return (0, _function.pipe)(fea, _bimap(f, g));
    },
    mapLeft: function mapLeft(fea, f) {
      return (0, _function.pipe)(fea, _mapLeft(f));
    },
    fold: function fold(fa, onLeft, onRight) {
      return (0, _function.pipe)(fa, _fold(onLeft, onRight));
    },
    getOrElse: function getOrElse(fa, onLeft) {
      return (0, _function.pipe)(fa, _getOrElse(onLeft));
    },
    orElse: function orElse(fa, f) {
      return (0, _function.pipe)(fa, _orElse(f));
    },
    swap: swap(M),
    rightM: rightF(M),
    leftM: leftF(M),
    left: left(M)
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,