"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ap = ap;
exports.chain = chain;
exports.evaluate = evaluate;
exports.execute = execute;
exports.fromF = fromF;
exports.fromState = fromState;
exports.getStateM = getStateM;
exports.map = map;
exports.of = of;

var _function = require("./function");

var _ReadonlyTuple = require("./ReadonlyTuple");

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function of(F) {
  return function (a) {
    return function (s) {
      return F.of([a, s]);
    };
  };
}
/**
 * @since 2.10.0
 */


function map(F) {
  return function (f) {
    return function (fa) {
      return function (s) {
        return F.map(fa(s), function (_ref) {
          var _ref2 = _slicedToArray(_ref, 2),
              a = _ref2[0],
              s1 = _ref2[1];

          return [f(a), s1];
        });
      };
    };
  };
}
/**
 * @since 2.10.0
 */


function ap(M) {
  return function (fa) {
    return function (fab) {
      return function (s) {
        return M.chain(fab(s), function (_ref3) {
          var _ref4 = _slicedToArray(_ref3, 2),
              f = _ref4[0],
              s = _ref4[1];

          return M.map(fa(s), function (_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2),
                a = _ref6[0],
                s = _ref6[1];

            return [f(a), s];
          });
        });
      };
    };
  };
}
/**
 * @since 2.10.0
 */


function chain(M) {
  return function (f) {
    return function (ma) {
      return function (s) {
        return M.chain(ma(s), function (_ref7) {
          var _ref8 = _slicedToArray(_ref7, 2),
              a = _ref8[0],
              s1 = _ref8[1];

          return f(a)(s1);
        });
      };
    };
  };
}
/**
 * @since 2.10.0
 */


function fromState(F) {
  return function (sa) {
    return function (s) {
      return F.of(sa(s));
    };
  };
}
/**
 * @since 2.10.0
 */


function fromF(F) {
  return function (ma) {
    return function (s) {
      return F.map(ma, function (a) {
        return [a, s];
      });
    };
  };
}
/**
 * @since 2.10.0
 */


function evaluate(F) {
  return function (s) {
    return function (ma) {
      return F.map(ma(s), function (_ref9) {
        var _ref10 = _slicedToArray(_ref9, 1),
            a = _ref10[0];

        return a;
      });
    };
  };
}
/**
 * @since 2.10.0
 */


function execute(F) {
  return function (s) {
    return function (ma) {
      return F.map(ma(s), _ReadonlyTuple.snd);
    };
  };
} // -------------------------------------------------------------------------------------
// deprecated
// -------------------------------------------------------------------------------------
// tslint:disable: deprecation

/**
 * @since 2.0.0
 * @deprecated
 */


/** @deprecated */

/* istanbul ignore next */
function getStateM(M) {
  var _ap = ap(M);

  var _map = map(M);

  var _chain = chain(M);

  var _evaluate = evaluate(M);

  var _execute = execute(M);

  return {
    map: function map(fa, f) {
      return (0, _function.pipe)(fa, _map(f));
    },
    ap: function ap(fab, fa) {
      return (0, _function.pipe)(fab, _ap(fa));
    },
    of: of(M),
    chain: function chain(ma, f) {
      return (0, _function.pipe)(ma, _chain(f));
    },
    get: function get() {
      return function (s) {
        return M.of([s, s]);
      };
    },
    put: function put(s) {
      return function () {
        return M.of([undefined, s]);
      };
    },
    modify: function modify(f) {
      return function (s) {
        return M.of([undefined, f(s)]);
      };
    },
    gets: function gets(f) {
      return function (s) {
        return M.of([f(s), s]);
      };
    },
    fromState: fromState(M),
    fromM: fromF(M),
    evalState: function evalState(fa, s) {
      return (0, _function.pipe)(fa, _evaluate(s));
    },
    execState: function execState(fa, s) {
      return (0, _function.pipe)(fa, _execute(s));
    }
  };
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,